pipeline {
    agent any
    stages {
        stage('test and build') {
            agent {
                docker { image 'golang:1.11' }
            }
            steps {
                dir ('pipeline-test') {
                    git 'https://github.com/cholick/pipeline-test'
                }
                sh '''
                    env
                '''
                sh '''
                    go version
                    go get github.com/onsi/ginkgo/ginkgo
                    go get github.com/onsi/gomega

                    mkdir -p /go/src/github.com/cholick
                    cp -r pipeline-test /go/src/github.com/cholick
                    cd /go/src/github.com/cholick/pipeline-test

                    make test
                    make build

                    cp /go/src/github.com/cholick/pipeline-test/test.* $WORKSPACE
                '''

                stash includes: 'test.*', name: 'binaries'
            }
        }
        stage('publish') {
            agent {
                docker { image 'cholick/github-release' }
            }
            steps {
                unstash 'binaries'
                sh '''
                    #export GITHUB_TOKEN=

                    git tag ${VERSION} && git push --tags
                    github-release release --user cholick --repo pipeline-test --tag ${VERSION} --name "${VERSION}"
                    github-release upload --user cholick --repo pipeline-test --tag ${VERSION} --name "test.darwin" --file test.darwin
                    github-release upload --user cholick --repo pipeline-test --tag ${VERSION} --name "test.linux" --file test.linux
                '''
            }
        }
    }
    post {
        always {
            echo "Post"
            cleanWs()
        }
    }
}
